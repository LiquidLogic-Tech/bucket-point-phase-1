[package]
name = "BucketPointPhase1"
edition = "2024.beta" # edition = "legacy" to use legacy (pre-2024) Move
# license = ""           # e.g., "MIT", "GPL", "Apache 2.0"
# authors = ["..."]      # e.g., ["Joe Smith (joesmith@noemail.com)", "John Snow (johnsnow@noemail.com)"]
# published-at = "0x6009b99da10a8ec5e5f108544c393191792a2970d5b710331803f31d53d4cb52"
# published-at = "0xadad56b1af73a29dbfed997ea13e4a6044eae29fd029fbd524fd121a13adca42"
# published-at = "0x562cb692158e1d2ab82cb901be324dc6234f197bab6bfc1ba38114ae0aebc189"
published-at = "0x704a2b39ba4f6e9072a414afda6669bbbbfc09e9c2e23fdafb9c16973e229cb0"

[dependencies]
LiquidlinkLocker = { git = "../liquidlink-contract-periphery", subdir = "locker", rev = "main" }
StrapFountain = { git = "../../sui-playground/strap-fountain", rev = "mainnet" }
BucketFountain = { git = "../../sui-playground/fountain", rev = "mainnet" }

# For remote import, use the `{ git = "...", subdir = "...", rev = "..." }`.
# Revision can be a branch, a tag, and a commit hash.
# MyRemotePackage = { git = "https://some.remote/host.git", subdir = "remote/path", rev = "main" }

# For local dependencies use `local = path`. Path is relative to the package root
# Local = { local = "../path/to" }

# To resolve a version conflict and force a specific version for dependency
# override use `override = true`
# Override = { local = "../conflicting/version", override = true }

[addresses]
bucket_point_phase1 = "0x0"
# bucket_point_phase1 = "0x6009b99da10a8ec5e5f108544c393191792a2970d5b710331803f31d53d4cb52"

# Named addresses will be accessible in Move as `@name`. They're also exported:
# for example, `std = "0x1"` is exported by the Standard Library.
# alice = "0xA11CE"

[dev-dependencies]
# The dev-dependencies section allows overriding dependencies for `--test` and
# `--dev` modes. You can introduce test-only dependencies here.
# Local = { local = "../path/to/dev-build" }

[dev-addresses]
# The dev-addresses section allows overwriting named addresses for the `--test`
# and `--dev` modes.
# alice = "0xB0B"

